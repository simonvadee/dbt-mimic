version: 2

models:
  - name: person
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
            "person_id",
            "race_concept_id",
            "race_source_value",
            "race_source_concept_id",
            "ethnicity_source_value",
            "ethnicity_concept_id",
            "ethnicity_source_concept_id",
            "care_site_id",
            "provider_id",
            "location_id",
            "person_source_value",
            "gender_source_concept_id",
            "gender_source_value",
            "birth_datetime",
            "gender_concept_id",
            "year_of_birth",
            "month_of_birth",
            "day_of_birth"
          ]
    columns:
      - name: person_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: gender_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: year_of_birth
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: month_of_birth
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
      - name: day_of_birth
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
      - name: birth_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: race_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: ethnicity_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: location_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('location')
              field: location_id
      - name: provider_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('provider')
              field: provider_id
      - name: care_site_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('care_site')
              field: care_site_id
      - name: person_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: gender_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: gender_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: race_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: race_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: ethnicity_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: ethnicity_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id

  - name: observation_period
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
            "observation_period_id",
            "person_id",
            "observation_period_start_date",
            "observation_period_end_date",
            "period_type_concept_id"
          ]
    columns:
      - name: observation_period_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: person_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: ref('person')
              field: person_id
      - name: observation_period_start_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: observation_period_end_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: period_type_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id

  - name: visit_occurrence
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
            "visit_occurrence_id",
            "person_id",
            "visit_concept_id",
            "visit_type_concept_id",
            "provider_id",
            "care_site_id",
            "visit_source_value",
            "visit_source_concept_id",
            "admitted_from_concept_id",
            "admitted_from_source_value",
            "discharged_to_concept_id",
            "discharged_to_source_value",
            "visit_start_date",
            "visit_start_datetime",
            "visit_end_date",
            "visit_end_datetime",
            "preceding_visit_occurrence_id"
          ]
    columns:
      - name: visit_occurrence_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: person_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: ref('person')
              field: person_id
      - name: visit_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: visit_start_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: visit_start_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: visit_end_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: visit_end_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: visit_type_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: provider_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('provider')
              field: provider_id
      - name: care_site_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('care_site')
              field: care_site_id
      - name: visit_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: visit_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: admitted_from_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: admitted_from_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: discharged_to_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: discharged_to_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: preceding_visit_occurrence_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('visit_occurrence')
              field: visit_occurrence_id

  - name: visit_detail
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
            "visit_detail_id",
            "person_id",
            "visit_detail_concept_id",
            "visit_detail_type_concept_id",
            "provider_id",
            "care_site_id",
            "visit_detail_source_value",
            "visit_detail_source_concept_id",
            "admitted_from_source_value",
            "admitted_from_concept_id",
            "discharged_to_concept_id",
            "discharged_to_source_value",
            "visit_occurrence_id",
            "visit_detail_start_date",
            "visit_detail_start_datetime",
            "visit_detail_end_date",
            "visit_detail_end_datetime",
            "parent_visit_detail_id",
            "preceding_visit_detail_id"
          ]
    columns:
      - name: visit_detail_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: person_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: ref('person')
              field: person_id
      - name: visit_detail_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: visit_detail_start_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: visit_detail_start_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: visit_detail_end_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: visit_detail_end_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: visit_detail_type_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: provider_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('provider')
              field: provider_id
      - name: care_site_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('care_site')
              field: care_site_id
      - name: visit_detail_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: visit_detail_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: admitted_from_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: admitted_from_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: discharged_to_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: discharged_to_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: preceding_visit_detail_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('visit_detail')
              field: visit_detail_id
      - name: parent_visit_detail_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('visit_detail')
              field: visit_detail_id
      - name: visit_occurrence_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: ref('visit_occurrence')
              field: visit_occurrence_id

  - name: condition_occurrence
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
            "condition_occurrence_id",
            "person_id",
            "condition_concept_id",
            "condition_start_date",
            "condition_start_datetime",
            "condition_end_date",
            "condition_end_datetime",
            "condition_type_concept_id",
            "condition_status_concept_id",
            "stop_reason",
            "provider_id",
            "visit_occurrence_id",
            "visit_detail_id",
            "condition_source_value",
            "condition_source_concept_id",
            "condition_status_source_value"
          ]
    columns:
      - name: condition_occurrence_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: person_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: ref('person')
              field: person_id
      - name: condition_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: condition_start_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: condition_start_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: condition_end_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
      - name: condition_end_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: condition_type_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: condition_status_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: stop_reason
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 20
      - name: provider_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('provider')
              field: provider_id
      - name: visit_occurrence_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('visit_occurrence')
              field: visit_occurrence_id
      - name: visit_detail_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('visit_detail')
              field: visit_detail_id
      - name: condition_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: condition_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: condition_status_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50

  - name: drug_exposure
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
            "drug_exposure_id",
            "person_id",
            "drug_concept_id",
            "drug_exposure_start_date",
            "drug_exposure_start_datetime",
            "drug_exposure_end_date",
            "drug_exposure_end_datetime",
            "verbatim_end_date",
            "drug_type_concept_id",
            "stop_reason",
            "refills",
            "quantity",
            "days_supply",
            "sig",
            "route_concept_id",
            "lot_number",
            "provider_id",
            "visit_occurrence_id",
            "visit_detail_id",
            "drug_source_value",
            "drug_source_concept_id",
            "route_source_value",
            "dose_unit_source_value"
          ]
    columns:
      - name: drug_exposure_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: person_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: ref('person')
              field: person_id
      - name: drug_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: drug_exposure_start_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: drug_exposure_start_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: drug_exposure_end_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: drug_exposure_end_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: verbatim_end_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
      - name: drug_type_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: stop_reason
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 20
      - name: refills
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
      - name: quantity
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
      - name: days_supply
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
      - name: sig
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
      - name: route_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: lot_number
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: provider_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('provider')
              field: provider_id
      - name: visit_occurrence_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('visit_occurrence')
              field: visit_occurrence_id
      - name: visit_detail_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('visit_detail')
              field: visit_detail_id
      - name: drug_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: drug_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: route_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: dose_unit_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50

  - name: procedure_occurrence
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
            "procedure_occurrence_id",
            "person_id",
            "procedure_concept_id",
            "procedure_date",
            "procedure_datetime",
            "procedure_end_date",
            "procedure_end_datetime",
            "procedure_type_concept_id",
            "modifier_concept_id",
            "quantity",
            "provider_id",
            "visit_occurrence_id",
            "visit_detail_id",
            "procedure_source_value",
            "procedure_source_concept_id",
            "modifier_source_value"
          ]
    columns:
      - name: procedure_occurrence_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: person_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: ref('person')
              field: person_id
      - name: procedure_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: procedure_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: procedure_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: procedure_end_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
      - name: procedure_end_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: procedure_type_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: modifier_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: quantity
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
      - name: provider_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('provider')
              field: provider_id
      - name: visit_occurrence_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('visit_occurrence')
              field: visit_occurrence_id
      - name: visit_detail_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('visit_detail')
              field: visit_detail_id
      - name: procedure_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: procedure_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: modifier_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50

  - name: device_exposure
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
            "device_exposure_id",
            "person_id",
            "device_concept_id",
            "device_exposure_start_date",
            "device_exposure_start_datetime",
            "device_exposure_end_date",
            "device_exposure_end_datetime",
            "device_type_concept_id",
            "unique_device_id",
            "production_id",
            "quantity",
            "provider_id",
            "visit_occurrence_id",
            "visit_detail_id",
            "device_source_value",
            "device_source_concept_id",
            "unit_concept_id",
            "unit_source_value",
            "unit_source_concept_id"
          ]
    columns:
      - name: device_exposure_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: person_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: ref('person')
              field: person_id
      - name: device_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: device_exposure_start_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: device_exposure_start_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: device_exposure_end_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
      - name: device_exposure_end_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: device_type_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: unique_device_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 255
      - name: production_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 255
      - name: quantity
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
      - name: provider_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('provider')
              field: provider_id
      - name: visit_occurrence_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('visit_occurrence')
              field: visit_occurrence_id
      - name: visit_detail_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('visit_detail')
              field: visit_detail_id
      - name: device_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: device_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: unit_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: unit_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: unit_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id

  - name: measurement
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
            "measurement_id",
            "person_id",
            "measurement_concept_id",
            "measurement_date",
            "measurement_datetime",
            "measurement_time",
            "measurement_type_concept_id",
            "operator_concept_id",
            "value_as_number",
            "value_as_concept_id",
            "unit_concept_id",
            "range_low",
            "range_high",
            "provider_id",
            "visit_occurrence_id",
            "visit_detail_id",
            "measurement_source_value",
            "measurement_source_concept_id",
            "unit_source_value",
            "unit_source_concept_id",
            "value_source_value",
            "measurement_event_id",
            "meas_event_field_concept_id"
          ]
    columns:
      - name: measurement_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: person_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: ref('person')
              field: person_id
      - name: measurement_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: measurement_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: measurement_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: measurement_time
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 10
      - name: measurement_type_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: operator_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: value_as_number
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
      - name: value_as_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: unit_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: range_low
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
      - name: range_high
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
      - name: provider_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('provider')
              field: provider_id
      - name: visit_occurrence_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('visit_occurrence')
              field: visit_occurrence_id
      - name: visit_detail_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('visit_detail')
              field: visit_detail_id
      - name: measurement_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: measurement_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: unit_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: unit_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: value_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: measurement_event_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: bigint
      - name: meas_event_field_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id

  - name: observation
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
            "observation_id",
            "person_id",
            "observation_concept_id",
            "observation_date",
            "observation_datetime",
            "observation_type_concept_id",
            "value_as_number",
            "value_as_string",
            "value_as_concept_id",
            "qualifier_concept_id",
            "unit_concept_id",
            "provider_id",
            "visit_occurrence_id",
            "visit_detail_id",
            "observation_source_value",
            "observation_source_concept_id",
            "unit_source_value",
            "qualifier_source_value",
            "value_source_value",
            "observation_event_id",
            "obs_event_field_concept_id"
          ]
    columns:
      - name: observation_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: person_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: ref('person')
              field: person_id
      - name: observation_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: observation_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: observation_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: observation_type_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: value_as_number
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
      - name: value_as_string
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 60
      - name: value_as_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: qualifier_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: unit_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: provider_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('provider')
              field: provider_id
      - name: visit_occurrence_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('visit_occurrence')
              field: visit_occurrence_id
      - name: visit_detail_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('visit_detail')
              field: visit_detail_id
      - name: observation_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: observation_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: unit_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: qualifier_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: value_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: observation_event_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: bigint
      - name: obs_event_field_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id

  - name: death
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
              "person_id",
              "death_date",
              "death_datetime",
              "death_type_concept_id",
              "cause_concept_id",
              "cause_source_value",
              "cause_source_concept_id"
          ]
    columns:
      - name: person_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: ref('person')
              field: person_id
      - name: death_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: death_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: death_type_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: cause_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: cause_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: cause_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id

  - name: note
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
              "note_id",
              "person_id",
              "note_date",
              "note_datetime",
              "note_type_concept_id",
              "note_class_concept_id",
              "note_title",
              "note_text",
              "encoding_concept_id",
              "language_concept_id",
              "provider_id",
              "visit_occurrence_id",
              "visit_detail_id",
              "note_source_value",
              "note_event_id",
              "note_event_field_concept_id"
          ]
    columns:
      - name: note_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: person_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: ref('person')
              field: person_id
      - name: note_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: note_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: note_type_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: note_class_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: note_title
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 250
      - name: note_text
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: encoding_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: language_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: provider_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('provider')
              field: provider_id
      - name: visit_occurrence_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('visit_occurrence')
              field: visit_occurrence_id
      - name: visit_detail_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('visit_detail')
              field: visit_detail_id
      - name: note_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: note_event_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: bigint
      - name: note_event_field_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id

  - name: note_nlp
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
              "note_nlp_id",
              "note_id",
              "section_concept_id",
              "snippet",
              "offset",
              "lexical_variant",
              "note_nlp_concept_id",
              "note_nlp_source_concept_id",
              "nlp_system",
              "nlp_date",
              "nlp_datetime",
              "term_exists",
              "term_temporal",
              "term_modifiers"
          ]
    columns:
      - name: note_nlp_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: note_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: section_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: snippet
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 250
      - name: offset
        quote: true
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: lexical_variant
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 250
      - name: note_nlp_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: note_nlp_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: nlp_system
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 250
      - name: nlp_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: nlp_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: term_exists
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 1
      - name: term_temporal
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: term_modifiers
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 2000

  - name: specimen
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
              "specimen_id",
              "person_id",
              "specimen_concept_id",
              "specimen_type_concept_id",
              "specimen_date",
              "specimen_datetime",
              "quantity",
              "unit_concept_id",
              "anatomic_site_concept_id",
              "disease_status_concept_id",
              "specimen_source_id",
              "specimen_source_value",
              "unit_source_value",
              "anatomic_site_source_value",
              "disease_status_source_value"
          ]
    columns:
      - name: specimen_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: person_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: ref('person')
              field: person_id
      - name: specimen_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: specimen_type_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: specimen_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: specimen_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: quantity
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
      - name: unit_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: anatomic_site_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: disease_status_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: specimen_source_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: specimen_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: unit_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: anatomic_site_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: disease_status_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50

  - name: fact_relationship
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
              "domain_concept_id_1",
              "fact_id_1",
              "domain_concept_id_2",
              "fact_id_2",
              "relationship_concept_id"
          ]
    columns:
      - name: domain_concept_id_1
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: fact_id_1
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: domain_concept_id_2
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: fact_id_2
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: relationship_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id

  - name: location
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
              "location_id",
              "address_1",
              "address_2",
              "city",
              "state",
              "zip",
              "county",
              "location_source_value",
              "country_concept_id",
              "country_source_value",
              "latitude",
              "longitude"
          ]
    columns:
      - name: location_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: address_1
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: address_2
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: city
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: state
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 2
      - name: zip
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 9
      - name: county
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 20
      - name: location_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: country_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: country_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 80
      - name: latitude
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
      - name: longitude
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric

  - name: care_site
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
              "care_site_id",
              "care_site_name",
              "location_id",
              "care_site_source_value",
              "place_of_service_source_value",
              "place_of_service_concept_id"
          ]
    columns:
      - name: care_site_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: care_site_name
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 255
      - name: place_of_service_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: location_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('location')
              field: location_id
      - name: care_site_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: place_of_service_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50

  - name: provider
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
              "provider_id",
              "provider_name",
              "npi",
              "dea",
              "specialty_concept_id",
              "care_site_id",
              "gender_concept_id",
              "provider_source_value",
              "specialty_source_value",
              "specialty_source_concept_id",
              "gender_source_value",
              "gender_source_concept_id",
              "year_of_birth"
          ]
    columns:
      - name: provider_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: provider_name
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 255
      - name: npi
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 20
      - name: dea
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 20
      - name: specialty_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: care_site_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: ref('care_site')
              field: care_site_id
      - name: year_of_birth
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
      - name: gender_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: provider_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: specialty_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: specialty_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: gender_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: gender_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id

  - name: payer_plan_period
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
              "payer_plan_period_id",
              "person_id",
              "payer_plan_period_start_date",
              "payer_plan_period_end_date",
              "payer_concept_id",
              "payer_source_value",
              "payer_source_concept_id",
              "plan_concept_id",
              "plan_source_value",
              "plan_source_concept_id",
              "sponsor_concept_id",
              "sponsor_source_value",
              "sponsor_source_concept_id",
              "family_source_value",
              "stop_reason_concept_id",
              "stop_reason_source_value",
              "stop_reason_source_concept_id"
          ]
    columns:
      - name: payer_plan_period_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: person_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: ref('person')
              field: person_id
      - name: payer_plan_period_start_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: payer_plan_period_end_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: payer_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: payer_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: payer_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: plan_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: plan_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: plan_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: sponsor_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: sponsor_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: sponsor_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: family_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: stop_reason_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: stop_reason_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: stop_reason_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id

  - name: cost
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
              "cost_id",
              "cost_event_id",
              "cost_domain_id",
              "cost_type_concept_id",
              "currency_concept_id",
              "total_charge",
              "total_cost",
              "total_paid",
              "paid_by_payer",
              "paid_by_patient",
              "paid_patient_copay",
              "paid_patient_coinsurance",
              "paid_patient_deductible",
              "paid_by_primary",
              "paid_ingredient_cost",
              "paid_dispensing_fee",
              "payer_plan_period_id",
              "amount_allowed",
              "revenue_code_concept_id",
              "revenue_code_source_value",
              "drg_concept_id",
              "drg_source_value"
          ]
    columns:
      - name: cost_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: cost_event_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: cost_domain_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 20
          - relationships:
              to: "{{ target.schema }}_omop.DOMAIN"
              field: domain_id
      - name: cost_type_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: currency_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: total_charge
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
      - name: total_cost
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
      - name: total_paid
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
      - name: paid_by_payer
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
      - name: paid_by_patient
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
      - name: paid_patient_copay
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
      - name: paid_patient_coinsurance
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
      - name: paid_patient_deductible
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
      - name: paid_by_primary
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
      - name: paid_ingredient_cost
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
      - name: paid_dispensing_fee
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
      - name: payer_plan_period_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
      - name: amount_allowed
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
      - name: revenue_code_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: revenue_code_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: drg_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: drg_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 3

  - name: drug_era
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
              "drug_era_id",
              "person_id",
              "drug_concept_id",
              "drug_era_start_date",
              "drug_era_end_date",
              "drug_exposure_count",
              "gap_days"
          ]
    columns:
      - name: drug_era_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: person_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: ref('person')
              field: person_id
      - name: drug_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: drug_era_start_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: drug_era_end_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: drug_exposure_count
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
      - name: gap_days
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer

  - name: dose_era
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
              "dose_era_id",
              "person_id",
              "drug_concept_id",
              "unit_concept_id",
              "dose_value",
              "dose_era_start_date",
              "dose_era_end_date"
          ]
    columns:
      - name: dose_era_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: person_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: ref('person')
              field: person_id
      - name: drug_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: unit_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: dose_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: dose_era_start_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: dose_era_end_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null

  - name: condition_era
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
              "condition_era_id",
              "person_id",
              "condition_concept_id",
              "condition_era_start_date",
              "condition_era_end_date",
              "condition_occurrence_count"
          ]
    columns:
      - name: condition_era_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: person_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: ref('person')
              field: person_id
      - name: condition_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: condition_era_start_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: condition_era_end_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: condition_occurrence_count
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer

  - name: episode
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
              "episode_id",
              "person_id",
              "episode_concept_id",
              "episode_start_date",
              "episode_start_datetime",
              "episode_end_date",
              "episode_end_datetime",
              "episode_parent_id",
              "episode_number",
              "episode_object_concept_id",
              "episode_type_concept_id",
              "episode_source_value",
              "episode_source_concept_id"
          ]
    columns:
      - name: episode_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: bigint
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: person_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: ref('person')
              field: person_id
      - name: episode_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: episode_start_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: episode_start_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: episode_end_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
      - name: episode_end_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone
      - name: episode_parent_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: bigint
      - name: episode_number
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
      - name: episode_object_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: episode_type_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: episode_source_value
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
      - name: episode_source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id

  - name: episode_event
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
              "episode_id",
              "event_id",
              "episode_event_field_concept_id"
          ]
    columns:
      - name: episode_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: bigint
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: ref('episode')
              field: episode_id
      - name: event_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: bigint
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: episode_event_field_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id

  - name: metadata
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
              "metadata_id",
              "metadata_concept_id",
              "metadata_type_concept_id",
              "name",
              "value_as_string",
              "value_as_concept_id",
              "value_as_number",
              "metadata_date",
              "metadata_datetime"
          ]
    columns:
      - name: metadata_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: metadata_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: metadata_type_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: name
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 250
      - name: value_as_string
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 250
      - name: value_as_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: value_as_number
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
      - name: metadata_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
      - name: metadata_datetime
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp without time zone

  - name: cdm_source
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
              "cdm_source_name",
              "cdm_source_abbreviation",
              "cdm_holder",
              "source_description",
              "source_documentation_reference",
              "cdm_etl_reference",
              "source_release_date",
              "cdm_release_date",
              "cdm_version",
              "cdm_version_concept_id",
              "vocabulary_version"
          ]
    columns:
      - name: cdm_source_name
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 255
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: cdm_source_abbreviation
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 25
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: cdm_holder
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 255
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: source_description
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
      - name: source_documentation_reference
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 255
      - name: cdm_etl_reference
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 255
      - name: source_release_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: cdm_release_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: cdm_version
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 10
      - name: cdm_version_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: vocabulary_version
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 20
          - dbt_expectations.expect_column_values_to_not_be_null

  - name: source_to_concept_map
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
              "source_code",
              "source_concept_id",
              "source_vocabulary_id",
              "source_code_description",
              "target_concept_id",
              "target_vocabulary_id",
              "valid_start_date",
              "valid_end_date",
              "invalid_reason"
          ]
    columns:
      - name: source_code
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 50
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: source_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: source_vocabulary_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 20
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.VOCABULARY"
              field: vocabulary_id
      - name: source_code_description
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 255
      - name: target_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: target_vocabulary_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 20
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.VOCABULARY"
              field: vocabulary_id
      - name: valid_start_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: valid_end_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: invalid_reason
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 1

  - name: cohort
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
              "cohort_definition_id",
              "subject_id",
              "cohort_start_date",
              "cohort_end_date"
          ]
    columns:
      - name: cohort_definition_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: ref('cohort_definition')
              field: cohort_definition_id
      - name: subject_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: cohort_start_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: cohort_end_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_not_be_null

  - name: cohort_definition
    tests:
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: [
              "cohort_definition_id",
              "cohort_definition_name",
              "cohort_definition_description",
              "definition_type_concept_id",
              "cohort_definition_syntax",
              "subject_concept_id",
              "cohort_initiation_date"
          ]
    columns:
      - name: cohort_definition_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: cohort_definition_name
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 0
              max_value: 255
          - dbt_expectations.expect_column_values_to_not_be_null
      - name: cohort_definition_description
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
      - name: definition_type_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: cohort_definition_syntax
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
      - name: subject_concept_id
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer
          - dbt_expectations.expect_column_values_to_not_be_null
          - relationships:
              to: "{{ target.schema }}_omop.CONCEPT"
              field: concept_id
      - name: cohort_initiation_date
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
